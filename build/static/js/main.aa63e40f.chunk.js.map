{"version":3,"sources":["pages/SmallestSubstring.js","routes/Routes.js","App.js","registerServiceWorker.js","index.js"],"names":["Index","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showsubstringLength","shortestValue","setState","s","document","getElementById","value","toLowerCase","pat","split","filter","item","i","ar","indexOf","sort","join","replace","n","length","mapPattern","mapString","countT","l","r","console","log","c","charAt","undefined","addedChar","min","Number","MAX_SAFE_INTEGER","cl","finalStr","substring","_this2","react_default","a","createElement","mdbreact_esm","id","class","className","fluid","size","type","placeholder","pattern","required","onClick","shortestSubstring","disable","React","Component","Routes","react_router","path","exact","component","SmallestSubstring","App","react_router_dom","routes_Routes","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.aa63e40f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  MDBNavbar, MDBCol, MDBBtn, MDBContainer,  MDBRow,\r\n} from 'mdbreact';\r\n\r\n\r\nclass Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        showsubstringLength:false\r\n    };\r\n    this.shortestValue = 0;\r\n  }\r\n\r\n  onClick() {\r\n    this.setState({\r\n    });\r\n  }\r\n\r\n\r\n  shortestSubstring() {\r\n    var s  = document.getElementById('stringPattern').value.toLowerCase();   \r\n    var pat = s.split('').filter(function(item, i, ar){ return ar.indexOf(item) === i; }).sort().join('');\r\n    //ignore spacing\r\n    pat = pat.replace(' ','')\r\n    var n = s.length; \r\n\r\n\r\n    var mapPattern={}, mapString={}, countT=0;\r\n\r\n    //pointers\r\n    var l=0, r=0;\r\n\r\n\r\n    //invalid if string length is less than the pattern \r\n    if(n<pat.length){\r\n        console.log(\"Error\");\r\n    }\r\n\r\n    // store occurrence ofs characters of pattern \r\n    for(var i=0; i<pat.length; i++){\r\n        var c = pat.charAt(i);\r\n        if(mapPattern[c] === undefined) {\r\n            mapPattern[c] = 1;\r\n            countT++;\r\n        } else{\r\n            mapPattern[c]++;\r\n        }\r\n    }\r\n\r\n\r\n    // start traversing the string \r\n    var addedChar=0;\r\n    var min = [0, n-1, Number.MAX_SAFE_INTEGER]; \r\n    while( r < n) {\r\n         c = s.charAt(r);\r\n        if(mapString[c] === undefined) {\r\n            mapString[c] = 1;\r\n        } else {\r\n            mapString[c]++;\r\n        }\r\n\r\n        //if pattern and string maps match\r\n        if (mapPattern[c] && mapPattern[c] === mapString[c]) {\r\n            addedChar++;\r\n        }\r\n        //Keep Moving right\r\n        while(addedChar === countT && l<=r) {\r\n            var cl = s.charAt(l);\r\n            // Try to minimize\r\n            if((r-l+1) < min[2]){\r\n                min = [l, r, r-l+1];\r\n            }\r\n\r\n            mapString[cl]--;\r\n            if(mapPattern[cl] && mapString[cl] < mapPattern[cl]){\r\n                addedChar--;\r\n            }\r\n            l++;\r\n        }\r\n        r++;\r\n    }\r\n\r\n\r\n    if(min[2] === Number.MAX_SAFE_INTEGER){\r\n       console.log(\"Error\");\r\n    }\r\n\r\n    var finalStr =  s.substring(min[0], min[1]+1);\r\n    this.shortestValue = finalStr.length;\r\n    this.setState({\r\n        showsubstringLength:true\r\n    });\r\n    console.log(finalStr);\r\n\r\n  }\r\n\r\n\r\n\r\nrender() {  \r\n    return (\r\n      <div>\r\n        <header>\r\n          <MDBNavbar id=\"custom-nav\">\r\n              <div class=\"col-md-12\" >\r\n                <p className=\"display-7  text-uppercase mt-3 title\">Shortest Substring</p>\r\n                </div>\r\n          </MDBNavbar>\r\n\r\n          {/* Page Content */}\r\n          <MDBContainer fluid>\r\n            <MDBRow className=\"\">\r\n              <MDBCol size=\"12\" className=\"full-img\">\r\n                <div class=\"mt-5 d-flex justify-content-center\">\r\n                  <p class=\"lead text-center dark-grey-text mb-3 display-7 initial-complaint-title orange-underline\">\r\n                  </p>\r\n                </div>\r\n                <div class=\"d-flex justify-content-center\">\r\n                  <p class=\"lead text-center grey-text mb-4\">\r\n                    Enter a string below to find the shortest substring\r\n                  </p>\r\n                </div>\r\n              </MDBCol>\r\n            </MDBRow>\r\n\r\n            <MDBRow>\r\n              <MDBCol size=\"12\" className=\"full-img\">           \r\n                <div class=\"row no-padding mt-5 mb-5\">\r\n                  <div class=\"col-md-3\"></div>\r\n\r\n                  {/* Card */}\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"card\">\r\n                      {/*  Card content */}\r\n                      <div class=\"card-body\">\r\n                                            {/* String Pattern*/}                                            \r\n                                            <div class=\"col-md-12\" className=\"fullDivWidth mb-3\">\r\n                                                <div class=\"md-form\" >\r\n                                                    <i class=\"fas fa-signature prefix blue-text\"></i>\r\n                                                    <input id=\"stringPattern\" class=\"form-control\" type=\"text\" placeholder=\"*Enter String Pattern\" pattern=\"^[_a-z A-Z]{3,}\" required/>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                        {/*  Button */}\r\n                        <div class=\"d-flex justify-content-center mt-4 mb-4\">\r\n                        <MDBBtn onClick={()=>this.shortestSubstring()}   type=\"button\" class=\"btn btn-blue\" disable>Check Shortest Substring</MDBBtn>\r\n                        </div>\r\n                        {\r\n                            this.state.showsubstringLength?\r\n                                <div>\r\n                                        <p className=\"display-7 text-center text-uppercase\">The Shortest Substring is</p>\r\n                                        <hr className=\"divider\" />\r\n                                        <p className=\"display-7 text-center text-uppercase result\">{this.shortestValue}</p>\r\n                                </div>\r\n                            :null\r\n                        }\r\n\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                <div class=\"col-md-6\"></div>\r\n              </div>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </header>\r\n    </div>\r\n  );\r\n  }\r\n}\r\nexport default Index;\r\n","import React from \"react\";\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\n// Main Content (Top Nav Links)\r\nimport SmallestSubstring from '../pages/SmallestSubstring.js'\r\n\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={SmallestSubstring} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\nexport default Routes;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n// Content\r\nimport Routes from './routes/Routes.js'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <Router >\r\n          <div>\r\n            <Routes />\r\n          </div>\r\n        </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}